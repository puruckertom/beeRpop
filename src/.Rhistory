for(i in 1:length(inputdata_seed)){assign(names(inputdata_seed)[i], inputdata_seed[[i]])}
for(i in 1:length(inputdata_soil)){assign(names(inputdata_soil)[i], inputdata_soil[[i]])}
#convert dataframe to list
#linputdata <- as.list(inputdata)
#withdraw miteimmtype from list
#listinput<- as.list(linputdata[c(1:5,7:16)])
outvar<- c("Colony Size","Adult Workers", "Foragers", "Worker Eggs", "Colony Pollen (g)")
cp_control <- rep(NA, nrows)
cp_foliar <- rep(NA, nrows)
cp_soil <- rep(NA, nrows)
cp_seed <- rep(NA, nrows)
for (n in 1:nrows){
x <- which(tdarray_control[n,1,1:Nsims] > 0) # queries colony size > 1000 for 1000 simulations at each time point
y <- which(tdarray_foliar[n,1,1:Nsims] > 0)
z <- which(tdarray_soil[n,1,1:Nsims] > 0)
zz <- which(tdarray_seed[n,1,1:Nsims] > 0)
cp_control[n] <- length(x)/Nsims #appends vector x with proportion of simulations per time step with Col Size > 0
cp_foliar[n] <- length(y)/Nsims
cp_soil[n] <- length(z)/Nsims
cp_seed[n] <- length(zz)/Nsims
}
#foragers
fa_control <- rep(NA, nrows)
fa_foliar <- rep(NA, nrows)
fa_soil <- rep(NA, nrows)
fa_seed <- rep(NA, nrows)
for (n in 1:nrows){
x <- which(tdarray_control[n,4,1:Nsims] > 0)
y <- which(tdarray_foliar[n,4,1:Nsims] > 0)
z <- which(tdarray_soil[n,4,1:Nsims] > 0)
zz <- which(tdarray_seed[n,4,1:Nsims] > 0)
fa_control[n] <- length(x)/Nsims
fa_foliar[n] <- length(y)/Nsims
fa_soil[n] <- length(z)/Nsims
fa_seed[n] <- length(zz)/Nsims
}
#adult workers
aw_control <- rep(NA, nrows)
aw_foliar <- rep(NA, nrows)
aw_soil <- rep(NA, nrows)
aw_seed <- rep(NA, nrows)
for (n in 1:nrows){
x <- which(tdarray_control[n,3,1:Nsims] > 0)
y <- which(tdarray_foliar[n,3,1:Nsims] > 0)
z <- which(tdarray_soil[n,3,1:Nsims] > 0)
zz <- which(tdarray_seed[n,3,1:Nsims] > 0)
aw_control[n] <- length(x)/Nsims
aw_foliar[n] <- length(y)/Nsims
aw_soil[n] <- length(z)/Nsims
aw_seed[n] <- length(zz)/Nsims
}
#capped worker brood
cwb_control <- rep(NA, nrows)
cwb_foliar <- rep(NA, nrows)
cwb_seed <- rep(NA, nrows)
cwb_soil <- rep(NA, nrows)
for (n in 1:nrows){
x <- which(tdarray_control[n, 6, 1:Nsims] > 0)
y <- which(tdarray_foliar[n, 6, 1:Nsims] > 0)
z <- which(tdarray_seed[n, 6, 1:Nsims] > 0)
zz <- which(tdarray_soil[n, 6, 1:Nsims] > 0)
cwb_control[n] <- length(x)/Nsims
cwb_foliar[n] <- length(y)/Nsims
cwb_seed[n] <- length(z)/Nsims
cwb_soil[n] <- length(zz)/Nsims
}
# #free mites
# fm_con <- rep(NA, nrows)
# fm_exp <- rep(NA, nrows)
# for (n in 1:nrows){
#   x <- which(tdarray_con[n,11,1:Nsims] > 0)
#   y <- which(tdarray_exp[n,11,1:Nsims] > 0)
#   fm_con[n] <- length(x)/Nsims
#   fm_exp[n] <- length(y)/Nsims
# }
#
# #dead foragers
# dfr_con <- rep(NA, nrows)
# dfr_exp <- rep(NA, nrows)
# for (n in 1:nrows){
#   x <- which(tdarray_con[n,1,1:Nsims] > 0)
#   y <- which(tdarray_exp[n,1,1:Nsims] > 0)
#   dfr_con[n] <- length(x)/Nsims
#   dfr_exp[n] <- length(y)/Nsims
# }
#
# #dead mites
# dm_con <- rep(NA, nrows)
# dm_exp <- rep(NA, nrows)
# for (n in 1:nrows){
#   x <- which(tdarray_con[n,16,1:Nsims] > 0)
#   y <- which(tdarray_exp[n,16,1:Nsims] > 0)
#   dm_con[n] <- length(x)/Nsims
#   dm_exp[n] <- length(y)/Nsims
# }
#
# #capped drone brood
# cdb_con <- rep(NA, nrows)
# cdb_exp <- rep(NA, nrows)
# for (n in 1:nrows){
#   x <- which(tdarray_con[n, 5, 1:Nsims] > 0)
#   y <- which(tdarray_exp[n, 5, 1:Nsims] > 0)
#   cdb_con[n] <- length(x)/Nsims
#   cdb_exp[n] <- length(y)/Nsims
# }
#MC proportions ##########
pdf(file= paste(vpdir_fig, "fig_1_MCproportions_convsexp.pdf", sep=""), width = 5, height = 9, onefile = TRUE, paper = "USr")
#start figures
par(mfrow=c(4,1), mar=c(2,4,1,0.5), oma=c(4,2,2,1))
plot(timearray, cp_control, type="l", col="blue", ylab = "P(Colony Size) > 0", main= "Time", ylim=c(0,1), xlab=NA)
lines(timearray, cp_foliar, type="l", lty = 2, col="red")
lines(timearray, cp_seed, type="l", lty = 2, col="black")
lines(timearray, cp_soil, type="l", lty = 2, col="green")
plot(timearray, fa_control, type="l", col="blue", ylab= "P(Foragers) > 0", ylim=c(0,1), xlab=NA)
lines(timearray, fa_foliar, type="l", lty = 2, col="red")
lines(timearray, fa_seed, type="l", lty = 2, col="black")
lines(timearray, fa_soil, type="l", lty = 2, col="green")
plot(timearray, aw_control, type="l", col="blue", ylab= "P(Adult Workers) > 0", ylim=c(0,1), xlab=NA)
lines(timearray, aw_foliar, type="l", lty = 2, col="red")
lines(timearray, aw_seed, type="l", lty = 2, col="black")
lines(timearray, aw_soil, type="l", lty = 2, col="green")
plot(timearray, cwb_control, type="l", col="blue", ylab = "P(Capped Worker Brood) > 0", ylim=c(0,1), xlab=NA)
lines(timearray, cwb_foliar, type="l", lty = 2, col="red")
lines(timearray, cwb_seed, type="l", lty = 2, col="black")
lines(timearray, cwb_soil, type="l", lty = 2, col="green")
#plot(timearray, fm_con, type="l", col="blue", ylab= "P(Free Mites) > 0", ylim=c(0,1), xlab=NA)
#lines(timearray, fm_exp, type="l", lty = 2, col="red")
#plot(timearray, dfr_con, type="l", col="blue", ylab= "P(Dead Foragers) > 0", ylim=c(0,1), xlab=NA)
#lines(timearray, dfr_exp, type="l", lty = 2, col="red")
#mtext(text = paste("Fig. 1 Proportion of simulations with values greater than zero"), side = 1, line = 1, outer = T)
dev.off()
out_control_colsize <- tdarray_control[,1,1:Nsims]
out_foliar_colsize <- tdarray_foliar[,1,1:Nsims]
out_seed_colsize <- tdarray_seed[,1,1:Nsims]
out_soil_colsize <- tdarray_soil[,1,1:Nsims]
avg_control_colsize <- colMeans(out_control_colsize) #average across entire simulation period
avg_foliar_colsize <- colMeans(out_foliar_colsize) #average across enture simulation period
avg_seed_colsize <- colMeans(out_seed_colsize) #average across enture simulation period
avg_soil_colsize <- colMeans(out_soil_colsize) #average across enture simulation period
pcctdarray_control<- array(data=NA, c(1,1,length(inputdata_control)), dimnames = list(c("x"),
c("Colony Size"),
c(colnames(inputdata_control))))
pcctdarray_foliar<- array(data=NA, c(1,1,length(inputdata_foliar)), dimnames = list(c("x"),
c("Colony Size"),
c(colnames(inputdata_foliar))))
pcctdarray_seed<- array(data=NA, c(1,1,length(inputdata_seed)), dimnames = list(c("x"),
c("Colony Size"),
c(colnames(inputdata_seed))))
pcctdarray_soil<- array(data=NA, c(1,1,length(inputdata_soil)), dimnames = list(c("x"),
c("Colony Size"),
c(colnames(inputdata_soil))))
# #PCC control
# for (i in 800){
#   for (j in 1){   #output variable
#     for (k in 1:length(inputdata_con)){  #input variable
#       tempinput<- tdoutput_con[1:Nsims]
#       temp<- pcc(inputdata_con[1:Nsims,], tempinput, rank = T)
#       pcctdarray_con[1,j,k]<- temp$PRCC[[1]][k]
#       print(i)
#     }
#   }
# }
#
# #PCC exposed
# for (i in 800){  #break
#   for (j in 1){   #output variable
#     for (k in 1:length(inputdata_exp)){  #input variable
#       tempinput<- tdoutput_exp[1:Nsims]
#       temp<- pcc(inputdata_exp[1:Nsims,], tempinput, rank = T)
#       pcctdarray_exp[1,j,k]<- temp$PRCC[[1]][k]
#       print(i)
#     }
#   }
# }
for (k in 1:length(inputdata_control)){  #input variable
temp_control<- pcc(inputdata_control, avg_control_colsize, rank = T)
pcctdarray_control[,,k]<- temp_control$PRCC[[1]][k]
}
for (k in 1:length(inputdata_foliar)){  #input variable
temp_foliar<- pcc(inputdata_foliar, avg_foliar_colsize, rank = T)
pcctdarray_foliar[,,k]<- temp_foliar$PRCC[[1]][k]
}
for (k in 1:length(inputdata_seed)){  #input variable
temp_seed<- pcc(inputdata_seed, avg_seed_colsize, rank = T)
pcctdarray_seed[,,k]<- temp_seed$PRCC[[1]][k]
}
for (k in 1:length(inputdata_soil)){  #input variable
temp_soil<- pcc(inputdata_soil, avg_soil_colsize, rank = T)
pcctdarray_soil[,,k]<- temp_soil$PRCC[[1]][k]
}
#dfpcc_con<- ldply(pcctdarray_con, rbind)
#colnames(dfpcc_con)<- c("Colony Size")
dfpcc_control<- melt(pcctdarray_control)
dfpcc_foliar <- melt(pcctdarray_foliar)
dfpcc_seed <- melt(pcctdarray_seed)
dfpcc_soil <- melt(pcctdarray_soil)
pdf(file= paste(vpdir_fig, "fig_tornado_colonysize.pdf", sep=""), width = 8.5, height = 11, onefile = TRUE, paper = "USr")
#start figures
#create plot pages
grid.newpage()
pushViewport(viewport(layout=grid.layout(1,4), gp= gpar(cex = 0.6)))
#start figures
aa<- ggplot(data=dfpcc_control, aes(x= dfpcc_control[[3]], y= dfpcc_control[[4]])) +
geom_bar(stat="identity", position = "identity") +
scale_y_continuous(limits= c(-1,1)) +
coord_flip() +
labs(title= "Control", x=" ", y= "Partial Correlation Coefficient") +
#facet_grid(. ~ Colony Size) +
theme_bw()
print(aa, vp= viewport(layout.pos.row= 1, layout.pos.col= 1), newpage= FALSE)
bb<- ggplot(data=dfpcc_foliar, aes(x= dfpcc_foliar[[3]], y= dfpcc_foliar[[4]])) +
geom_bar(stat="identity", position = "identity") +
scale_y_continuous(limits= c(-1,1)) +
coord_flip() +
labs(title= "Foliar", x=" ", y= "Partial Correlation Coefficient") +
#facet_grid(. ~ Var2) +
theme_bw()
print(bb, vp= viewport(layout.pos.row= 1, layout.pos.col= 2), newpage= FALSE)
cc<- ggplot(data=dfpcc_seed, aes(x= dfpcc_seed[[3]], y= dfpcc_seed[[4]])) +
geom_bar(stat="identity", position = "identity") +
scale_y_continuous(limits= c(-1,1)) +
coord_flip() +
labs(title= "Seed", x=" ", y= "Partial Correlation Coefficient") +
#facet_grid(. ~ Var2) +
theme_bw()
print(cc, vp= viewport(layout.pos.row= 1, layout.pos.col= 3), newpage= FALSE)
dd<- ggplot(data=dfpcc_soil, aes(x= dfpcc_soil[[3]], y= dfpcc_soil[[4]])) +
geom_bar(stat="identity", position = "identity") +
scale_y_continuous(limits= c(-1,1)) +
coord_flip() +
labs(title= "Soil", x=" ", y= "Partial Correlation Coefficient") +
#facet_grid(. ~ Var2) +
theme_bw()
print(dd, vp= viewport(layout.pos.row= 1, layout.pos.col= 4), newpage= FALSE)
dev.off()
View(indata_control)
View(inputdata_control)
View(indata_control)
View(inputdata_control)
View(inputdata_foliar)
View(indata_foliar)
View(indata_seed)
View(inputdata_seed)
View(inputdata_seed)
View(inputdata_soil)
View(indata_soil)
load(paste(vpdir_out_control,"tdarray_control.RData", sep = ""))
dim(tdarray_control)
#FOLIAR
load(paste(vpdir_out_foliar,"tdarray_foliar.RData", sep = ""))
dim(tdarray_foliar)
#SEED
load(paste(vpdir_out_seed,"tdarray_seed.RData", sep = ""))
dim(tdarray_seed)
#SOIL
load(paste(vpdir_out_soil,"tdarray_soil.RData", sep = ""))
dim(tdarray_soil)
#TIME
load(paste(vpdir_output,"timearray.RData", sep = ""))
nrows<- length(timearray)
#rownames(tdarray)
#days, outputs, simulations
#read input files
#CONTROL
indata_control <- read.csv(file = paste(vpdir_out_control, "inputdata_control.csv", sep = ""), header = TRUE)
#cut out column "X"
inputdata_control<- indata_control[, c(5:9,11,13:38,42:44)]
#FOLIAR
indata_foliar <- read.csv(file = paste(vpdir_out_foliar, "inputdata_foliar.csv", sep = ""), header = TRUE)
inputdata_foliar<- indata_foliar[, c(5:9,11,13:39,44:46)]
indata_seed <- read.csv(file = paste(vpdir_out_seed, "inputdata_seed.csv", sep = ""), header = TRUE)
inputdata_seed<- indata_seed[, c(5:9,11,13:39,44:46)]
indata_soil <- read.csv(file = paste(vpdir_out_soil, "inputdata_soil.csv", sep = ""), header = TRUE)
inputdata_soil<- indata_soil[, c(5:9,11,13:39,44:46)]
#extract input vectors from dataframe
for(i in 1:length(inputdata_control)){assign(names(inputdata_control)[i], inputdata_control[[i]])}
for(i in 1:length(inputdata_foliar)){assign(names(inputdata_foliar)[i], inputdata_foliar[[i]])}
for(i in 1:length(inputdata_seed)){assign(names(inputdata_seed)[i], inputdata_seed[[i]])}
for(i in 1:length(inputdata_soil)){assign(names(inputdata_soil)[i], inputdata_soil[[i]])}
#convert dataframe to list
#linputdata <- as.list(inputdata)
#withdraw miteimmtype from list
#listinput<- as.list(linputdata[c(1:5,7:16)])
outvar<- c("Colony Size","Adult Workers", "Foragers", "Worker Eggs", "Colony Pollen (g)")
out_control_colsize <- tdarray_control[,1,1:Nsims]
out_foliar_colsize <- tdarray_foliar[,1,1:Nsims]
out_seed_colsize <- tdarray_seed[,1,1:Nsims]
out_soil_colsize <- tdarray_soil[,1,1:Nsims]
avg_control_colsize <- colMeans(out_control_colsize) #average across entire simulation period
avg_foliar_colsize <- colMeans(out_foliar_colsize) #average across enture simulation period
avg_seed_colsize <- colMeans(out_seed_colsize) #average across enture simulation period
avg_soil_colsize <- colMeans(out_soil_colsize) #average across enture simulation period
pcctdarray_control<- array(data=NA, c(1,1,length(inputdata_control)), dimnames = list(c("x"),
c("Colony Size"),
c(colnames(inputdata_control))))
pcctdarray_foliar<- array(data=NA, c(1,1,length(inputdata_foliar)), dimnames = list(c("x"),
c("Colony Size"),
c(colnames(inputdata_foliar))))
pcctdarray_seed<- array(data=NA, c(1,1,length(inputdata_seed)), dimnames = list(c("x"),
c("Colony Size"),
c(colnames(inputdata_seed))))
pcctdarray_soil<- array(data=NA, c(1,1,length(inputdata_soil)), dimnames = list(c("x"),
c("Colony Size"),
c(colnames(inputdata_soil))))
# #PCC control
# for (i in 800){
#   for (j in 1){   #output variable
#     for (k in 1:length(inputdata_con)){  #input variable
#       tempinput<- tdoutput_con[1:Nsims]
#       temp<- pcc(inputdata_con[1:Nsims,], tempinput, rank = T)
#       pcctdarray_con[1,j,k]<- temp$PRCC[[1]][k]
#       print(i)
#     }
#   }
# }
#
# #PCC exposed
# for (i in 800){  #break
#   for (j in 1){   #output variable
#     for (k in 1:length(inputdata_exp)){  #input variable
#       tempinput<- tdoutput_exp[1:Nsims]
#       temp<- pcc(inputdata_exp[1:Nsims,], tempinput, rank = T)
#       pcctdarray_exp[1,j,k]<- temp$PRCC[[1]][k]
#       print(i)
#     }
#   }
# }
for (k in 1:length(inputdata_control)){  #input variable
temp_control<- pcc(inputdata_control, avg_control_colsize, rank = T)
pcctdarray_control[,,k]<- temp_control$PRCC[[1]][k]
}
for (k in 1:length(inputdata_foliar)){  #input variable
temp_foliar<- pcc(inputdata_foliar, avg_foliar_colsize, rank = T)
pcctdarray_foliar[,,k]<- temp_foliar$PRCC[[1]][k]
}
for (k in 1:length(inputdata_seed)){  #input variable
temp_seed<- pcc(inputdata_seed, avg_seed_colsize, rank = T)
pcctdarray_seed[,,k]<- temp_seed$PRCC[[1]][k]
}
for (k in 1:length(inputdata_soil)){  #input variable
temp_soil<- pcc(inputdata_soil, avg_soil_colsize, rank = T)
pcctdarray_soil[,,k]<- temp_soil$PRCC[[1]][k]
}
#dfpcc_con<- ldply(pcctdarray_con, rbind)
#colnames(dfpcc_con)<- c("Colony Size")
dfpcc_control<- melt(pcctdarray_control)
dfpcc_foliar <- melt(pcctdarray_foliar)
dfpcc_seed <- melt(pcctdarray_seed)
dfpcc_soil <- melt(pcctdarray_soil)
pdf(file= paste(vpdir_fig, "fig_tornado_colonysize.pdf", sep=""), width = 8.5, height = 11, onefile = TRUE, paper = "USr")
#start figures
#create plot pages
grid.newpage()
pushViewport(viewport(layout=grid.layout(1,4), gp= gpar(cex = 0.6)))
#start figures
aa<- ggplot(data=dfpcc_control, aes(x= dfpcc_control[[3]], y= dfpcc_control[[4]])) +
geom_bar(stat="identity", position = "identity") +
scale_y_continuous(limits= c(-1,1)) +
coord_flip() +
labs(title= "Control", x=" ", y= "Partial Correlation Coefficient") +
#facet_grid(. ~ Colony Size) +
theme_bw()
print(aa, vp= viewport(layout.pos.row= 1, layout.pos.col= 1), newpage= FALSE)
bb<- ggplot(data=dfpcc_foliar, aes(x= dfpcc_foliar[[3]], y= dfpcc_foliar[[4]])) +
geom_bar(stat="identity", position = "identity") +
scale_y_continuous(limits= c(-1,1)) +
coord_flip() +
labs(title= "Foliar", x=" ", y= "Partial Correlation Coefficient") +
#facet_grid(. ~ Var2) +
theme_bw()
print(bb, vp= viewport(layout.pos.row= 1, layout.pos.col= 2), newpage= FALSE)
cc<- ggplot(data=dfpcc_seed, aes(x= dfpcc_seed[[3]], y= dfpcc_seed[[4]])) +
geom_bar(stat="identity", position = "identity") +
scale_y_continuous(limits= c(-1,1)) +
coord_flip() +
labs(title= "Seed", x=" ", y= "Partial Correlation Coefficient") +
#facet_grid(. ~ Var2) +
theme_bw()
print(cc, vp= viewport(layout.pos.row= 1, layout.pos.col= 3), newpage= FALSE)
dd<- ggplot(data=dfpcc_soil, aes(x= dfpcc_soil[[3]], y= dfpcc_soil[[4]])) +
geom_bar(stat="identity", position = "identity") +
scale_y_continuous(limits= c(-1,1)) +
coord_flip() +
labs(title= "Soil", x=" ", y= "Partial Correlation Coefficient") +
#facet_grid(. ~ Var2) +
theme_bw()
print(dd, vp= viewport(layout.pos.row= 1, layout.pos.col= 4), newpage= FALSE)
dev.off()
cp_control <- rep(NA, nrows)
cp_foliar <- rep(NA, nrows)
cp_soil <- rep(NA, nrows)
cp_seed <- rep(NA, nrows)
for (n in 1:nrows){
x <- which(tdarray_control[n,1,1:Nsims] > 0) # queries colony size > 1000 for 1000 simulations at each time point
y <- which(tdarray_foliar[n,1,1:Nsims] > 0)
z <- which(tdarray_soil[n,1,1:Nsims] > 0)
zz <- which(tdarray_seed[n,1,1:Nsims] > 0)
cp_control[n] <- length(x)/Nsims #appends vector x with proportion of simulations per time step with Col Size > 0
cp_foliar[n] <- length(y)/Nsims
cp_soil[n] <- length(z)/Nsims
cp_seed[n] <- length(zz)/Nsims
}
#foragers
fa_control <- rep(NA, nrows)
fa_foliar <- rep(NA, nrows)
fa_soil <- rep(NA, nrows)
fa_seed <- rep(NA, nrows)
for (n in 1:nrows){
x <- which(tdarray_control[n,4,1:Nsims] > 0)
y <- which(tdarray_foliar[n,4,1:Nsims] > 0)
z <- which(tdarray_soil[n,4,1:Nsims] > 0)
zz <- which(tdarray_seed[n,4,1:Nsims] > 0)
fa_control[n] <- length(x)/Nsims
fa_foliar[n] <- length(y)/Nsims
fa_soil[n] <- length(z)/Nsims
fa_seed[n] <- length(zz)/Nsims
}
#adult workers
aw_control <- rep(NA, nrows)
aw_foliar <- rep(NA, nrows)
aw_soil <- rep(NA, nrows)
aw_seed <- rep(NA, nrows)
for (n in 1:nrows){
x <- which(tdarray_control[n,3,1:Nsims] > 0)
y <- which(tdarray_foliar[n,3,1:Nsims] > 0)
z <- which(tdarray_soil[n,3,1:Nsims] > 0)
zz <- which(tdarray_seed[n,3,1:Nsims] > 0)
aw_control[n] <- length(x)/Nsims
aw_foliar[n] <- length(y)/Nsims
aw_soil[n] <- length(z)/Nsims
aw_seed[n] <- length(zz)/Nsims
}
#capped worker brood
cwb_control <- rep(NA, nrows)
cwb_foliar <- rep(NA, nrows)
cwb_seed <- rep(NA, nrows)
cwb_soil <- rep(NA, nrows)
for (n in 1:nrows){
x <- which(tdarray_control[n, 6, 1:Nsims] > 0)
y <- which(tdarray_foliar[n, 6, 1:Nsims] > 0)
z <- which(tdarray_seed[n, 6, 1:Nsims] > 0)
zz <- which(tdarray_soil[n, 6, 1:Nsims] > 0)
cwb_control[n] <- length(x)/Nsims
cwb_foliar[n] <- length(y)/Nsims
cwb_seed[n] <- length(z)/Nsims
cwb_soil[n] <- length(zz)/Nsims
}
# #free mites
# fm_con <- rep(NA, nrows)
# fm_exp <- rep(NA, nrows)
# for (n in 1:nrows){
#   x <- which(tdarray_con[n,11,1:Nsims] > 0)
#   y <- which(tdarray_exp[n,11,1:Nsims] > 0)
#   fm_con[n] <- length(x)/Nsims
#   fm_exp[n] <- length(y)/Nsims
# }
#
# #dead foragers
# dfr_con <- rep(NA, nrows)
# dfr_exp <- rep(NA, nrows)
# for (n in 1:nrows){
#   x <- which(tdarray_con[n,1,1:Nsims] > 0)
#   y <- which(tdarray_exp[n,1,1:Nsims] > 0)
#   dfr_con[n] <- length(x)/Nsims
#   dfr_exp[n] <- length(y)/Nsims
# }
#
# #dead mites
# dm_con <- rep(NA, nrows)
# dm_exp <- rep(NA, nrows)
# for (n in 1:nrows){
#   x <- which(tdarray_con[n,16,1:Nsims] > 0)
#   y <- which(tdarray_exp[n,16,1:Nsims] > 0)
#   dm_con[n] <- length(x)/Nsims
#   dm_exp[n] <- length(y)/Nsims
# }
#
# #capped drone brood
# cdb_con <- rep(NA, nrows)
# cdb_exp <- rep(NA, nrows)
# for (n in 1:nrows){
#   x <- which(tdarray_con[n, 5, 1:Nsims] > 0)
#   y <- which(tdarray_exp[n, 5, 1:Nsims] > 0)
#   cdb_con[n] <- length(x)/Nsims
#   cdb_exp[n] <- length(y)/Nsims
# }
#MC proportions ##########
pdf(file= paste(vpdir_fig, "fig_1_MCproportions_convsexp.pdf", sep=""), width = 5, height = 9, onefile = TRUE, paper = "USr")
#start figures
par(mfrow=c(4,1), mar=c(2,4,1,0.5), oma=c(4,2,2,1))
plot(timearray, cp_control, type="l", col="blue", ylab = "P(Colony Size) > 0", main= "Time", ylim=c(0,1), xlab=NA)
lines(timearray, cp_foliar, type="l", lty = 2, col="red")
lines(timearray, cp_seed, type="l", lty = 2, col="black")
lines(timearray, cp_soil, type="l", lty = 2, col="green")
plot(timearray, fa_control, type="l", col="blue", ylab= "P(Foragers) > 0", ylim=c(0,1), xlab=NA)
lines(timearray, fa_foliar, type="l", lty = 2, col="red")
lines(timearray, fa_seed, type="l", lty = 2, col="black")
lines(timearray, fa_soil, type="l", lty = 2, col="green")
plot(timearray, aw_control, type="l", col="blue", ylab= "P(Adult Workers) > 0", ylim=c(0,1), xlab=NA)
lines(timearray, aw_foliar, type="l", lty = 2, col="red")
lines(timearray, aw_seed, type="l", lty = 2, col="black")
lines(timearray, aw_soil, type="l", lty = 2, col="green")
plot(timearray, cwb_control, type="l", col="blue", ylab = "P(Capped Worker Brood) > 0", ylim=c(0,1), xlab=NA)
lines(timearray, cwb_foliar, type="l", lty = 2, col="red")
lines(timearray, cwb_seed, type="l", lty = 2, col="black")
lines(timearray, cwb_soil, type="l", lty = 2, col="green")
#plot(timearray, fm_con, type="l", col="blue", ylab= "P(Free Mites) > 0", ylim=c(0,1), xlab=NA)
#lines(timearray, fm_exp, type="l", lty = 2, col="red")
#plot(timearray, dfr_con, type="l", col="blue", ylab= "P(Dead Foragers) > 0", ylim=c(0,1), xlab=NA)
#lines(timearray, dfr_exp, type="l", lty = 2, col="red")
#mtext(text = paste("Fig. 1 Proportion of simulations with values greater than zero"), side = 1, line = 1, outer = T)
dev.off()
