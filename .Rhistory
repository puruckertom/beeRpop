#   varroainput12 <- paste(parameter12, inputvalue12, sep= " ")
#   write(varroainput12, file= paste(vpdir_in_exp, "input", i, ".txt", sep=""), append= TRUE, sep = "\n")
#   varroainput13 <- paste(parameter13, inputvalue13, sep= " ")
#   write(varroainput13, file= paste(vpdir_in_exp, "input", i, ".txt", sep=""), append= TRUE, sep = "\n")
#   varroainput14 <- paste(parameter14, inputvalue14, sep= " ")
#   write(varroainput14, file= paste(vpdir_in_exp, "input", i, ".txt", sep=""), append= TRUE, sep = "\n")
#   varroainput15 <- paste(parameter15, inputvalue15, sep= " ")
#   write(varroainput15, file= paste(vpdir_in_exp, "input", i, ".txt", sep=""), append= TRUE, sep = "\n")
varroainput16 <- paste(parameter16, inputvalue16, sep= " ")
write(varroainput16, file= paste(vpdir_in_exp, "input", i, ".txt", sep=""), append= TRUE, sep = "\n")
varroainput17 <- paste(parameter17, inputvalue17, sep= " ")
write(varroainput17, file= paste(vpdir_in_exp, "input", i, ".txt", sep=""), append= TRUE, sep = "\n")
varroainput18 <- paste(parameter18, inputvalue18, sep= " ")
write(varroainput18, file= paste(vpdir_in_exp, "input", i, ".txt", sep=""), append= TRUE, sep = "\n")
varroainput19 <- paste(parameter19, inputvalue19, sep= " ")
write(varroainput19, file= paste(vpdir_in_exp, "input", i, ".txt", sep=""), append= TRUE, sep = "\n")
varroainput20 <- paste(parameter20, inputvalue20, sep= " ")
write(varroainput20, file= paste(vpdir_in_exp, "input", i, ".txt", sep=""), append= TRUE, sep = "\n")
}
for (i in 1:Nsims) {
#   parameter <- ("ICQueenStrength=") #queen strength
#   inputvalue <- queenstrength[i]
#   parameter2 <- ("RQWkrDrnRatio=") #requeen worker-drone ratio
#   inputvalue2 <- wkrdrnratio[i]
#   parameter3 <- ("ICDroneMiteSurvivorship=") #drone-mite survivorship
#   inputvalue3 <- drnmitesurvive[i]
#   parameter4 <- ("ICWorkerMiteSurvivorship=")  #worker-mite survivorship
#   inputvalue4 <- wkrmitesurvive[i]
#   parameter5 <- ("ICForagerLifespan=")  #Forager Lifespan
#   inputvalue5 <- fgrlifespan[i]
#   parameter6 <- ("ImmType=")   #Mite Immigration Type
#   inputvalue6 <- miteimmtype[i]
#   parameter7 <- ("AIAdultSlope=") #ai adult slope
#   inputvalue7 <- adslope[i]
#   parameter8 <- ("AIAdultLD50=") #ai adult LD50
#   inputvalue8 <- adLD50[i]
#   parameter9 <- ("AIAdultSlopeContact=") #ai adult slope contact
#   inputvalue9 <- adslopec[i]
#   parameter10 <- ("AIAdultLD50Contact=") #ai adult LD50 contact
#   inputvalue10 <- adLD50c[i]
#   parameter11 <- ("AILarvaSlope=") #ai larva slope
#   inputvalue11 <- lslope[i]
#   parameter12 <- ("AILarvaLD50=") #ai larva LD50
#   inputvalue12 <- lLD50[i]
#   parameter13 <- ("AIKOW=") #ai kow
#   inputvalue13 <- kow[i]
#   parameter14 <- ("AIKOC=") #ai koc
#   inputvalue14 <- koc[i]
#   parameter15 <- ("AIHalfLife=") #ai half life (days)
#   inputvalue15 <- halflife[i]
parameter16 <- ("EAppRate=") #application rate (lb/A)
inputvalue16 <- apprate_exp[i]
parameter17 <- ("FoliarEnabled=") #foliar spray enabled
inputvalue17 <- foliar_true[i]
parameter18 <- ("FoliarAppDate=") #foliar spray application date
inputvalue18 <- foliar_appdate[i]
parameter19 <- ("FoliarForageBegin=") #foliar spray exposure interval begin
inputvalue19 <- foliar_begin[i]
parameter20 <- ("FoliarForageEnd=") #foliar spray exposure interval end
inputvalue20 <- foliar_end[i]
#   varroainput <- paste(parameter,inputvalue, sep=" ")
#   write(varroainput, file = paste(vpdir_in_exp, "input",i,".txt", sep = ""), append = FALSE)
#   varroainput2 <- paste(parameter2,inputvalue2, sep=" ")
#   write(varroainput2, file = paste(vpdir_in_exp, "input",i,".txt", sep = ""), append = TRUE, sep = "\n")
#   varroainput3 <- paste(parameter3, inputvalue3, sep=" ")
#   write(varroainput3, file = paste(vpdir_in_exp, "input", i, ".txt", sep=""), append= TRUE, sep = "\n")
#   varroainput4 <- paste(parameter4, inputvalue4, sep=" ")
#   write(varroainput4, file= paste(vpdir_in_exp, "input", i, ".txt", sep=""), append= TRUE, sep = "\n")
#   varroainput5 <- paste(parameter5, inputvalue5, sep= " ")
#   write(varroainput5, file= paste(vpdir_in_exp, "input", i, ".txt", sep=""), append= TRUE, sep = "\n")
#   varroainput6 <- paste(parameter6, inputvalue6, sep= " ")
#   write(varroainput6, file= paste(vpdir_in_exp, "input", i, ".txt", sep=""), append= TRUE, sep = "\n")
#   varroainput7 <- paste(parameter7, inputvalue7, sep= " ")
#   write(varroainput7, file= paste(vpdir_in_exp, "input", i, ".txt", sep=""), append= TRUE, sep = "\n")
#   varroainput8 <- paste(parameter8, inputvalue8, sep= " ")
#   write(varroainput8, file= paste(vpdir_in_exp, "input", i, ".txt", sep=""), append= TRUE, sep = "\n")
#   varroainput9 <- paste(parameter9, inputvalue9, sep= " ")
#   write(varroainput9, file= paste(vpdir_in_exp, "input", i, ".txt", sep=""), append= TRUE, sep = "\n")
#   varroainput10 <- paste(parameter10, inputvalue10, sep= " ")
#   write(varroainput10, file= paste(vpdir_in_exp, "input", i, ".txt", sep=""), append= TRUE, sep = "\n")
#   varroainput11 <- paste(parameter11, inputvalue11, sep= " ")
#   write(varroainput11, file= paste(vpdir_in_exp, "input", i, ".txt", sep=""), append= TRUE, sep = "\n")
#   varroainput12 <- paste(parameter12, inputvalue12, sep= " ")
#   write(varroainput12, file= paste(vpdir_in_exp, "input", i, ".txt", sep=""), append= TRUE, sep = "\n")
#   varroainput13 <- paste(parameter13, inputvalue13, sep= " ")
#   write(varroainput13, file= paste(vpdir_in_exp, "input", i, ".txt", sep=""), append= TRUE, sep = "\n")
#   varroainput14 <- paste(parameter14, inputvalue14, sep= " ")
#   write(varroainput14, file= paste(vpdir_in_exp, "input", i, ".txt", sep=""), append= TRUE, sep = "\n")
#   varroainput15 <- paste(parameter15, inputvalue15, sep= " ")
#   write(varroainput15, file= paste(vpdir_in_exp, "input", i, ".txt", sep=""), append= TRUE, sep = "\n")
varroainput16 <- paste(parameter16, inputvalue16, sep= " ")
write(varroainput16, file= paste(vpdir_in_exp, "input", i, ".txt", sep=""), append= FALSE, sep = "\n")
varroainput17 <- paste(parameter17, inputvalue17, sep= " ")
write(varroainput17, file= paste(vpdir_in_exp, "input", i, ".txt", sep=""), append= TRUE, sep = "\n")
varroainput18 <- paste(parameter18, inputvalue18, sep= " ")
write(varroainput18, file= paste(vpdir_in_exp, "input", i, ".txt", sep=""), append= TRUE, sep = "\n")
varroainput19 <- paste(parameter19, inputvalue19, sep= " ")
write(varroainput19, file= paste(vpdir_in_exp, "input", i, ".txt", sep=""), append= TRUE, sep = "\n")
varroainput20 <- paste(parameter20, inputvalue20, sep= " ")
write(varroainput20, file= paste(vpdir_in_exp, "input", i, ".txt", sep=""), append= TRUE, sep = "\n")
}
install.packages("rgdal")
install.packages("raster")
install.packages("rgeos")
library(sp)
library(rgdal)
library(raster)
library(rgeos)
for (i in 1:Nsims) {
# n<-inputtest[i]
inputfile<- paste("input",i,".txt", sep="")
outputfile<- paste("results",i,".txt", sep="")
logfile<- paste("log",i,".txt", sep="")
vpdir_command <- paste(vpdir_exe, "VarroaPop_3_2_6_0.exe ", vpdir_exe, vrp_filename,
" /b /or ", vpdir_out_con, outputfile,
" /i ", vpdir_in_con, inputfile, " /ol ", vpdir_log, logfile, sep="")
print(vpdir_command)
system(vpdir_command)
}
#EXPOSED
for (i in 1:Nsims) {
# n<-inputtest[i]
inputfile<- paste("input",i,".txt", sep="")
outputfile<- paste("results",i,".txt", sep="")
logfile<- paste("log",i,"exp.txt", sep="")
vpdir_command <- paste(vpdir_exe, "VarroaPop_3_2_6_0.exe ", vpdir_exe, vrp_filename,
" /b /or ", vpdir_out_exp, outputfile,
" /i ", vpdir_in_exp, inputfile, " /ol ", vpdir_log, logfile, sep="")
print(vpdir_command)
system(vpdir_command)
}
# load up varroapop data into a 3d array dataframe ######
df <- read.table(paste(vpdir_out_con,"results",i,".txt", sep=""), header= FALSE, sep= "",
skip = 6, stringsAsFactors = FALSE, row.names=NULL)
dim(df)
nrows <- dim(df[1])[[1]] #this is dependent on the duration of the simulation as set in the comparison.vrp file
tdarray_con <- array(data=NA, c(nrows,26,Nsims))
dim(tdarray_con)
tdarray_exp <- array(data=NA, c(nrows,26,Nsims))
dim(tdarray_exp)
timearray<- array(data=NA, c(nrows))
timearray[2:nrows]<- df[2:nrows,1]
timearray<- as.Date(timearray,"%m/%d/%Y")
timediff <- timearray[3]-timearray[2]
timearray[1] <- timearray[2]-timediff
length(timearray)
# read output files
#CONTROL
for (i in 1:Nsims) {
df <- read.table(paste(vpdir_out_con,"results",i,".txt", sep=""), header= FALSE, sep= "",
skip = 6, stringsAsFactors = FALSE, row.names=NULL)
newarray <- df[,2:27]
tdarray_con[1:nrows,1:26,i] <- abind(newarray[1:nrows,1:26], along=3)
}
#EXPOSED
for (i in 1:Nsims) {
df <- read.table(paste(vpdir_out_exp,"results",i,".txt", sep=""), header= FALSE, sep= "",
skip = 6, stringsAsFactors = FALSE, row.names=NULL)
newarray <- df[,2:27]
tdarray_exp[1:nrows,1:26,i] <- abind(newarray[1:nrows,1:26], along=3)
}
# save tdarray
save(tdarray_con, file = paste(vpdir_out_con,"tdarray_con.RData", sep = ""))
save(tdarray_exp, file = paste(vpdir_out_exp,"tdarray_exp.RData", sep = ""))
save(timearray,file = paste(vpdir_output,"timearray.RData", sep = ""))
library(plyr)
library(reshape2)
library(ggplot2)
library(grid)
library(gridExtra)
library(sensitivity)
library(abind)
# load up varroapop data into a 3d array dataframe ######
df <- read.table(paste(vpdir_out_con,"results",i,".txt", sep=""), header= FALSE, sep= "",
skip = 6, stringsAsFactors = FALSE, row.names=NULL)
dim(df)
nrows <- dim(df[1])[[1]] #this is dependent on the duration of the simulation as set in the comparison.vrp file
tdarray_con <- array(data=NA, c(nrows,26,Nsims))
dim(tdarray_con)
tdarray_exp <- array(data=NA, c(nrows,26,Nsims))
dim(tdarray_exp)
timearray<- array(data=NA, c(nrows))
timearray[2:nrows]<- df[2:nrows,1]
timearray<- as.Date(timearray,"%m/%d/%Y")
timediff <- timearray[3]-timearray[2]
timearray[1] <- timearray[2]-timediff
length(timearray)
# read output files
#CONTROL
for (i in 1:Nsims) {
df <- read.table(paste(vpdir_out_con,"results",i,".txt", sep=""), header= FALSE, sep= "",
skip = 6, stringsAsFactors = FALSE, row.names=NULL)
newarray <- df[,2:27]
tdarray_con[1:nrows,1:26,i] <- abind(newarray[1:nrows,1:26], along=3)
}
#EXPOSED
for (i in 1:Nsims) {
df <- read.table(paste(vpdir_out_exp,"results",i,".txt", sep=""), header= FALSE, sep= "",
skip = 6, stringsAsFactors = FALSE, row.names=NULL)
newarray <- df[,2:27]
tdarray_exp[1:nrows,1:26,i] <- abind(newarray[1:nrows,1:26], along=3)
}
# save tdarray
save(tdarray_con, file = paste(vpdir_out_con,"tdarray_con.RData", sep = ""))
save(tdarray_exp, file = paste(vpdir_out_exp,"tdarray_exp.RData", sep = ""))
save(timearray,file = paste(vpdir_output,"timearray.RData", sep = ""))
#load output files
#CONTROL
load(paste(vpdir_out_con,"tdarray_con.RData", sep = ""))
dim(tdarray_con)
#EXPOSED
load(paste(vpdir_out_exp,"tdarray_exp.RData", sep = ""))
dim(tdarray_exp)
#TIME
load(paste(vpdir_output,"timearray.RData", sep = ""))
nrows<- length(timearray)
#rownames(tdarray)
#days, outputs, simulations
#read input files
#CONTROL
indata_con <- read.csv(file = paste(vpdir_out_con, "inputdata_con.csv", sep = ""), header = TRUE)
#cut out column "X"
inputdata_con<- indata_con[,2:17]
#EXPOSED
indata_exp <- read.csv(file = paste(vpdir_out_exp, "inputdata_exp.csv", sep = ""), header = TRUE)
inputdata_exp<- indata_exp[,2:17]
#extract input vectors from dataframe
for(i in 1:16){assign(names(inputdata_con)[i], inputdata_con[[i]])}
#extract input apprate vector from exposure dataframe
assign(names(inputdata_exp)[16], inputdata_exp[[16]])
#convert dataframe to list
#linputdata <- as.list(inputdata)
#withdraw miteimmtype from list
#listinput<- as.list(linputdata[c(1:5,7:16)])
outvar<- c("Colony Size","Adult Workers", "Foragers", "Worker Eggs", "Colony Pollen (g)", "Colony Nectar")
View(indata_con)
View(indata_exp)
library(plyr)
library(reshape2)
library(ggplot2)
library(grid)
library(gridExtra)
library(sensitivity)
library(abind)
#echo environment
Sys.info()
Sys.info()[4]
.Platform
version
#Determine path directory based on the user machine######
#tom epa windows
if(Sys.info()[4]=="DZ2626UTPURUCKE"){
vpdir<-path.expand("k:/git/beeRpop/")
vrp_filename <- "comparison_stp.vrp"
}
#marcia epa computer
if(Sys.info()[4]=="LZ2626UMSNYDE02"){
vpdir<-path.expand("C:/Users/msnyde02/varroapoptest2/")
}
#carmen personal laptop
if(Sys.info()[4]=="Ashleys-MBP"||Sys.info()[4]=="Ashleys-MacBook-Pro.local"||Sys.info()[4]=="Ashleys-MBP-2") {
vpdir<-path.expand("~/git/beeRpop/")
vrp_filename <- "comparison.vrp"
}
#carmen epa desktop
if(Sys.info()[4]=="DZ2626UCKUAN"){
vpdir<-path.expand("C:/Users/ckuan/git/beeRpop/")
vrp_filename <- "comparison.vrp"
}
#andrew epa
if(Sys.info()[4]=="LZ2032EAKANAREK"){
vpdir <- path.expand("C:/Users/AKanarek/Documents/GitHub/beeRpop/")
}
#tom laptop
if(Sys.info()[4]=="stp-air.local"){
vpdir<-path.expand("~/git/beeRpop/")
}
vpdir_input <- paste(vpdir, "input/", sep = "")
vpdir_output <- paste(vpdir, "output/", sep = "")
vpdir_log <- paste(vpdir, "log/", sep = "")
vpdir_fig <- paste(vpdir, "fig/", sep = "")
vpdir_exe <- paste(vpdir, "exe/", sep = "")
vpdir_io <- paste(vpdir, "io/", sep = "")
vpdir_in_exp <- paste(vpdir_input, "exposed/", sep = "")
vpdir_in_con <- paste(vpdir_input, "control/", sep = "")
vpdir_out_exp <- paste(vpdir_output, "exposed/", sep = "")
vpdir_out_con <- paste(vpdir_output, "control/", sep = "")
vpdir_weather <- paste(vpdir, "weather/", sep = "")
#number of simulations
Nsims <- 1000
#weather file
#can be .dvf or .wth
vrp_weather <- "w93193-tempadj.dvf"
#simulation start and end
#must have mm/dd/yyyy format
simstart <- "01/01/1988"
simend <- "12/31/1990"
df <- read.table(paste(vpdir_out_con,"results",i,".txt", sep=""), header= FALSE, sep= "",
skip = 6, stringsAsFactors = FALSE, row.names=NULL)
dim(df)
nrows <- dim(df[1])[[1]] #this is dependent on the duration of the simulation as set in the comparison.vrp file
tdarray_con <- array(data=NA, c(nrows,26,Nsims))
dim(tdarray_con)
tdarray_exp <- array(data=NA, c(nrows,26,Nsims))
dim(tdarray_exp)
timearray<- array(data=NA, c(nrows))
timearray[2:nrows]<- df[2:nrows,1]
timearray<- as.Date(timearray,"%m/%d/%Y")
timediff <- timearray[3]-timearray[2]
timearray[1] <- timearray[2]-timediff
length(timearray)
# read output files
#CONTROL
for (i in 1:Nsims) {
df <- read.table(paste(vpdir_out_con,"results",i,".txt", sep=""), header= FALSE, sep= "",
skip = 6, stringsAsFactors = FALSE, row.names=NULL)
newarray <- df[,2:27]
tdarray_con[1:nrows,1:26,i] <- abind(newarray[1:nrows,1:26], along=3)
}
#EXPOSED
for (i in 1:Nsims) {
df <- read.table(paste(vpdir_out_exp,"results",i,".txt", sep=""), header= FALSE, sep= "",
skip = 6, stringsAsFactors = FALSE, row.names=NULL)
newarray <- df[,2:27]
tdarray_exp[1:nrows,1:26,i] <- abind(newarray[1:nrows,1:26], along=3)
}
# save tdarray
save(tdarray_con, file = paste(vpdir_out_con,"tdarray_con.RData", sep = ""))
save(tdarray_exp, file = paste(vpdir_out_exp,"tdarray_exp.RData", sep = ""))
save(timearray,file = paste(vpdir_output,"timearray.RData", sep = ""))
df <- read.table(paste(vpdir_out_con,"results",i,".txt", sep=""), header= FALSE, sep= "",
skip = 6, stringsAsFactors = FALSE, row.names=NULL)
dim(df)
nrows <- dim(df[1])[[1]] #this is dependent on the duration of the simulation as set in the comparison.vrp file
tdarray_con <- array(data=NA, c(nrows,26,Nsims))
dim(tdarray_con)
tdarray_exp <- array(data=NA, c(nrows,26,Nsims))
dim(tdarray_exp)
timearray<- array(data=NA, c(nrows))
timearray[2:nrows]<- df[2:nrows,1]
timearray<- as.Date(timearray,"%m/%d/%Y")
timediff <- timearray[3]-timearray[2]
timearray[1] <- timearray[2]-timediff
length(timearray)
# read output files
#CONTROL
for (i in 1:Nsims) {
df <- read.table(paste(vpdir_out_con,"results",i,".txt", sep=""), header= FALSE, sep= "",
skip = 6, stringsAsFactors = FALSE, row.names=NULL)
newarray <- df[,2:27]
tdarray_con[1:nrows,1:26,i] <- abind(newarray[1:nrows,1:26], along=3)
}
#EXPOSED
for (i in 1:Nsims) {
df <- read.table(paste(vpdir_out_exp,"results",i,".txt", sep=""), header= FALSE, sep= "",
skip = 6, stringsAsFactors = FALSE, row.names=NULL)
newarray <- df[,2:27]
tdarray_exp[1:nrows,1:26,i] <- abind(newarray[1:nrows,1:26], along=3)
}
# save tdarray
save(tdarray_con, file = paste(vpdir_out_con,"tdarray_con.RData", sep = ""))
save(tdarray_exp, file = paste(vpdir_out_exp,"tdarray_exp.RData", sep = ""))
save(timearray,file = paste(vpdir_output,"timearray.RData", sep = ""))
#colony persistence
cp_con <- rep(NA, nrows)
cp_exp <- rep(NA, nrows)
for (n in 1:nrows){
x <- which(tdarray_con[n,1,1:Nsims] > 1000) # queries colony size > 1000 for 1000 simulations at each time point
y <- which(tdarray_exp[n,1,1:Nsims] > 1000)
cp_con[n] <- length(x)/Nsims #appends vector x with proportion of simulations per time step with Col Size > 0
cp_exp[n] <- length(y)/Nsims
}
#foragers
fa_con <- rep(NA, nrows)
fa_exp <- rep(NA, nrows)
for (n in 1:nrows){
x <- which(tdarray_con[n,4,1:Nsims] > 0)
y <- which(tdarray_exp[n,4,1:Nsims] > 0)
fa_con[n] <- length(x)/Nsims
fa_exp[n] <- length(y)/Nsims
}
#adult workers
aw_con <- rep(NA, nrows)
aw_exp <- rep(NA, nrows)
for (n in 1:nrows){
x <- which(tdarray_con[n,3,1:Nsims] > 0)
y <- which(tdarray_exp[n,3,1:Nsims] > 0)
aw_con[n] <- length(x)/Nsims
aw_exp[n] <- length(y)/Nsims
}
#free mites
fm_con <- rep(NA, nrows)
fm_exp <- rep(NA, nrows)
for (n in 1:nrows){
x <- which(tdarray_con[n,11,1:Nsims] > 0)
y <- which(tdarray_exp[n,11,1:Nsims] > 0)
fm_con[n] <- length(x)/Nsims
fm_exp[n] <- length(y)/Nsims
}
#dead foragers
dfr_con <- rep(NA, nrows)
dfr_exp <- rep(NA, nrows)
for (n in 1:nrows){
x <- which(tdarray_con[n,1,1:Nsims] > 0)
y <- which(tdarray_exp[n,1,1:Nsims] > 0)
dfr_con[n] <- length(x)/Nsims
dfr_exp[n] <- length(y)/Nsims
}
#dead mites
dm_con <- rep(NA, nrows)
dm_exp <- rep(NA, nrows)
for (n in 1:nrows){
x <- which(tdarray_con[n,16,1:Nsims] > 0)
y <- which(tdarray_exp[n,16,1:Nsims] > 0)
dm_con[n] <- length(x)/Nsims
dm_exp[n] <- length(y)/Nsims
}
#capped drone brood
cdb_con <- rep(NA, nrows)
cdb_exp <- rep(NA, nrows)
for (n in 1:nrows){
x <- which(tdarray_con[n, 5, 1:Nsims] > 0)
y <- which(tdarray_exp[n, 5, 1:Nsims] > 0)
cdb_con[n] <- length(x)/Nsims
cdb_exp[n] <- length(y)/Nsims
}
#capped worker brood
cwb_con <- rep(NA, nrows)
cwb_exp <- rep(NA, nrows)
for (n in 1:nrows){
x <- which(tdarray_con[n, 6, 1:Nsims] > 0)
y <- which(tdarray_exp[n, 6, 1:Nsims] > 0)
cwb_con[n] <- length(x)/Nsims
cwb_exp[n] <- length(y)/Nsims
}
#create figure 1
pdf(file= paste(vpdir_output, "fig_1_MCproportions_convsexp.pdf", sep=""), width = 5, height = 9, onefile = TRUE, paper = "USr")
#start figures
par(mfrow=c(5,1), mar=c(2,4,1,0.5), oma=c(4,2,2,1))
plot(timearray, cp_con, type="l", ylab = "P(Colony Size) > 0", main= "time1", ylim=c(0,1), xlab=NA)
lines(timearray, cp_exp, type="l", lty = 2, col="blue")
plot(timearray, fa_con, type="l", ylab= "P(Foragers) > 0", ylim=c(0,1), xlab=NA)
lines(timearray, fa_exp, type="l", lty = 2, col="blue")
plot(timearray, aw_con, type="l", ylab= "P(Adult Workers) > 0", ylim=c(0,1), xlab=NA)
lines(timearray, aw_exp, type="l", lty = 2, col="blue")
plot(timearray, fm_con, type="l", ylab= "P(Free Mites) > 0", ylim=c(0,1), xlab=NA)
lines(timearray, fm_exp, type="l", lty = 2, col="blue")
plot(timearray, dfr_con, type="l", ylab= "P(Dead Foragers) > 0", ylim=c(0,1), xlab=NA)
lines(timearray, dfr_exp, type="l", lty = 2, col="blue")
mtext(text = paste("Fig. 1 Proportion of simulations with values greater than zero"), side = 1, line = 1, outer = T)
dev.off()
#time series plotting #######
temparray_con <- tdarray_con[1:nrows,resvar,1:Nsims]
temparray_exp <- tdarray_exp[1:nrows,resvar,1:Nsims]
dimnames(temparray_con)<- list(c(as.character(timearray)), c(outvar))
dimnames(temparray_exp)<- list(c(as.character(timearray)), c(outvar))
tempout_con<- array(data=NA, c(nrows,6,3), dimnames = list(c(as.character(timearray)),
c("Colony Size","Adult Workers", "Foragers", "Worker Eggs", "Colony Pollen (g)","Colony Nectar"),
c("25%","50%","75%")))
tempout_exp<- array(data=NA, c(nrows,6,3), dimnames = list(c(as.character(timearray)),
c("Colony Size","Adult Workers", "Foragers", "Worker Eggs", "Colony Pollen (g)","Colony Nectar"),
c("25%","50%","75%")))
for (r in 1:6){
for (t in 1:nrows){
p<- quantile(temparray_con[t, r, 1:Nsims])
z<- quantile(temparray_exp[t, r, 1:Nsims])
for (s in 1:3){
quant_con<- c(p[[2]], p[[3]], p[[4]])
quant_exp<- c(z[[2]], z[[3]], z[[4]])
tempout_con[t,r,s]<- quant_con[s]
tempout_exp[t,r,s]<- quant_exp[s]
}
}
}
resvar<- c(1,3,4,10,18,20)
temparray_con <- tdarray_con[1:nrows,resvar,1:Nsims]
temparray_exp <- tdarray_exp[1:nrows,resvar,1:Nsims]
dimnames(temparray_con)<- list(c(as.character(timearray)), c(outvar))
dimnames(temparray_exp)<- list(c(as.character(timearray)), c(outvar))
tempout_con<- array(data=NA, c(nrows,6,3), dimnames = list(c(as.character(timearray)),
c("Colony Size","Adult Workers", "Foragers", "Worker Eggs", "Colony Pollen (g)","Colony Nectar"),
c("25%","50%","75%")))
tempout_exp<- array(data=NA, c(nrows,6,3), dimnames = list(c(as.character(timearray)),
c("Colony Size","Adult Workers", "Foragers", "Worker Eggs", "Colony Pollen (g)","Colony Nectar"),
c("25%","50%","75%")))
for (r in 1:6){
for (t in 1:nrows){
p<- quantile(temparray_con[t, r, 1:Nsims])
z<- quantile(temparray_exp[t, r, 1:Nsims])
for (s in 1:3){
quant_con<- c(p[[2]], p[[3]], p[[4]])
quant_exp<- c(z[[2]], z[[3]], z[[4]])
tempout_con[t,r,s]<- quant_con[s]
tempout_exp[t,r,s]<- quant_exp[s]
}
}
}
#create PDF timeseries
pdf(file= paste(vpdir_output, "fig_quantile_timeseries.pdf", sep=""), width = 8.5, height = 11, onefile = TRUE, paper = "USr")
#start figures
#time series plots
par(mfrow=c(6,2), mar=c(2, 4, 1, 0.5), oma= c(3,2,2,6.5))
for (r in 1:6){
plot(timearray, tempout_con[,r,2], type = "l", ylim = c(0,max(tempout_con[,r,3])), ylab= paste(outvar[r]), xlab = NA, main= paste(outvar[r], "Control", sep=" "))
lines(timearray, tempout_con[,r,1], type = "l", lty= 2, col = "red")
lines(timearray, tempout_con[,r,3], type = "l", lty=4, col = "blue")
plot(timearray, tempout_exp[,r,2], type = "l", ylim = c(0,max(tempout_exp[,r,3])), ylab= paste(outvar[r]), xlab = NA, main= paste(outvar[r], "Exposed", sep=" "))
lines(timearray, tempout_exp[,r,1], type = "l", lty= 2, col = "red")
lines(timearray, tempout_exp[,r,3], type = "l", lty=4, col = "blue")
}
mtext(text = paste("Fig. 14 Time series plots of lower, middle, and upper quartiles."), side = 1, line = 1, outer = T)
dev.off()
